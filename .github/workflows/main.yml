name: package and publish

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: test with pytest
      run: |
        pytest
  
  package:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: set up python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: build and publish package
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*

  install:
    if: github.ref == 'refs/heads/master'
    needs: package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
    - name: set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: install package
      run: |
        python -m pip install --upgrade pip
        pip install --pre pydelta-smt
    - name: test package
      run: |
        pytest --pyargs delta
